#!/usr/bin/python3
# -*- coding: utf-8 -*-
import os
import subprocess
import logging

_logger = logging.getLogger(__name__)
_logger.warning("300-aggregate-repositories")

SOURCES = os.environ.get("SOURCES")
PATH_REPOSITORIES = "%s/repos.d" % (os.environ.get("RESOURCES"))

if not os.path.isdir(PATH_REPOSITORIES):
    exit()

# Find repos.yml files
files = [(d, PATH_REPOSITORIES) for d in os.listdir(PATH_REPOSITORIES)]

# Aggregate repositories
for repos, folder in sorted(files):
    file = os.path.join(folder, repos)
    if not os.path.getsize(file):
        continue
    _logger.info("Aggregating repositories from: %s", file)
    subprocess.check_call(
        [
            "autoaggregate",
            "--config",
            file,
            "--install",
            "--output",
            os.path.join(SOURCES, "repositories"),
        ]
    )
    # Remove file after consumption
    os.remove(file)
